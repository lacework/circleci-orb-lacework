version: 2.1

orbs:
  lacework: lacework/lacework@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@9.0

# Pipeline parameters
parameters:
  # These pipeline parameters are required by the "trigger-integration-tests-workflow"
  # job, by default.
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

jobs:
  integration-test-install-cli:
    executor: orb-tools/ubuntu
    steps:
      - checkout
      - lacework/install-cli
      - run:
          command: |
            if ! lacework version; then
              echo "The lacework-cli was not found"
              exit 1
            fi

  integration-test-install-inline-scanner:
    executor: orb-tools/ubuntu
    steps:
      - checkout
      - lacework/install-inline-scanner
      - run:
          name: Verify install
          command: |
            if ! lw-scanner version; then
              echo "The lacework inline scanner was not found"
              exit 1
            fi

  integration-test-install-cli-unprivileged:
    executor: orb-tools/ubuntu
    resource_class: small
    steps:
      - checkout
      - lacework/install-cli
      - run:
          command: |
            if ! lacework version; then
              echo "The lacework-cli was not found"
              exit 1
            fi

  integration-test-install-inline-scanner-unprivileged:
    executor: orb-tools/ubuntu
    steps:
      - checkout
      - lacework/install-inline-scanner
      - run:
          name: Verify install
          command: |
            if ! lw-scanner version; then
              echo "The lacework inline scanner was not found"
              exit 1
            fi

  integration-test-execute-inline-evaluation:
    working_directory: ~/project
    machine: true
    steps:
      - checkout
      - lacework/install-inline-scanner
      - run:
          name: Pull in vuln image for testing
          command: |
            docker pull chriscircleci/vuln_django:7f7305bea884b63578c28d4513a916e2247ec152
      - lacework/inline-scanner-evaluate:
          image_tag: "7f7305bea884b63578c28d4513a916e2247ec152"
          image_name: "chriscircleci/vuln_django"
          html: true
          tags: "orb_test=true"
          save: true
          policy: true
          data-directory: ~/project/vuln_report
      - run:
          command: |
            mkdir  lacework-artifacts/

            if [ `ls -1 lacework-lacework-cli* 2>/dev/null | wc -l ` -gt 0 ]; then
                mv lacework-lacework-cli* lacework-artifacts/
            fi

      - store_artifacts:
          path: lacework-artifacts


  integration-test-ctr-vuln-scan:
    executor: lacework/default
    steps:
      - checkout
      - lacework/ctr-vuln-scan:
          registry: "index.docker.io"
          repository: "lacework/lacework-cli"
          tag: "debian-10"
          details: on
          html: yes
          no_output_timeout: 10m
      - run:
          command: |
            mkdir  lacework-artifacts/

            if [ `ls -1 lacework-lacework-cli* 2>/dev/null | wc -l ` -gt 0 ]; then
                mv lacework-lacework-cli* lacework-artifacts/
            fi

      - store_artifacts:
          path: lacework-artifacts

  integration-test-ctr-vuln-scan-fail_on_fixable:
    parameters:
      fixable:
        type: boolean
        default: true
    executor: lacework/default
    steps:
      - checkout
      - lacework/ctr-vuln-scan:
          registry: "index.docker.io"
          repository: chriscircleci/vuln_django
          tag: 7f7305bea884b63578c28d4513a916e2247ec152
          fail_on_fixable: false

  integration-test-ctr-vuln-scan-show-only-fixable:
    working_directory: ~/project
    machine: true
    steps:
      - checkout
      - lacework/install-cli
      - lacework/ctr-vuln-scan:
          registry: "index.docker.io"
          repository: chriscircleci/vuln_django
          tag: 7f7305bea884b63578c28d4513a916e2247ec152
          fixable: true
          html: true
      - run:
          name: Persist html vuln report as build artifact
          command: |
            mkdir  lacework-artifacts/

            if [ `ls -1 *.html 2>/dev/null | wc -l ` -gt 0 ]; then
                mv *.html lacework-artifacts/
            fi

      - store_artifacts:
          path: lacework-artifacts

  integration-test-ctr-vuln-scan-fail-on-severity:
    working_directory: ~/project
    machine: true
    steps:
      - lacework/install-cli
      - lacework/ctr-vuln-scan:
          registry: "index.docker.io"
          repository: "lacework/lacework-cli"
          tag: "latest"
          fail_on_severity: "critical"

  integration-test-scan-pkg-manifest:
    executor: lacework/default
    steps:
      - checkout
      - lacework/scan-pkg-manifest:
          manifest: '{
            "osPkgInfoList": [
                {
                    "os":"Ubuntu",
                    "osVer":"18.04",
                    "pkg": "openssl",
                    "pkgVer": "1.1.1-1ubuntu2.1~18.04.5"
                }
              ]
            }'
      - lacework/scan-pkg-manifest:
          local-host: yes

workflows:
  # This `lint-pack_validate_publish-dev` workflow will run on any commit.
  lint_pack-validate_publish-dev:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      # pack your orb YAML files to a single orb.yml
      # validate the orb.yml file to ensure it is well-formed
      - orb-tools/pack:
          requires:
            - orb-tools/lint

      # release dev version of orb, for testing & possible publishing.
      # orb will be published as dev:alpha and dev:${CIRCLE_SHA1:0:7}.
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          orb-name: lacework/lacework
          requires:
            - orb-tools/pack

      # trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          requires:
            - orb-tools/publish-dev

  # This `integration-tests_prod-release` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-tests_prod-release:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - integration-test-install-cli
      - integration-test-install-cli-unprivileged
      - integration-test-install-inline-scanner-unprivileged
      - integration-test-install-inline-scanner
      - integration-test-ctr-vuln-scan
      - integration-test-scan-pkg-manifest
      - integration-test-ctr-vuln-scan-fail_on_fixable
      - integration-test-ctr-vuln-scan-show-only-fixable
      - integration-test-ctr-vuln-scan-fail-on-severity
      - integration-test-execute-inline-evaluation

      # Test multiple permutations of the job abstraction
      - lacework/ctr-vuln-scan:
          registry: "index.docker.io"
          repository: "lacework/lacework-cli"
          tag: "latest"
          html: true
          no_output_timeout: 20m

      - lacework/ctr-vuln-scan:
          registry: "index.docker.io"
          repository: "chriscircleci/vuln_django"
          tag: "7f7305bea884b63578c28d4513a916e2247ec152"

      # Test scan-pkg-manifest
      - lacework/scan-pkg-manifest:
          manifest: '{
            "osPkgInfoList": [
                {
                    "os":"Ubuntu",
                    "osVer":"18.04",
                    "pkg": "openssl",
                    "pkgVer": "1.1.1-1ubuntu2.1~18.04.5"
                }
              ]
            }'


      # publish a semver version of the orb. relies on the commit
      # subject containing the text "[semver:patch|minor|major|skip]"
      # as that will determine whether a patch, minor or major
      # version will be published or if publishing should
      # be skipped.
      # e.g. [semver:patch] will cause a patch version to be published.
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: lacework/lacework

          add-pr-comment: false
          fail-if-semver-not-indicated: true
          publish-version-tag: true
          ssh-fingerprints: 17:62:8a:b9:66:53:0f:8a:47:15:24:75:95:c8:14:54
          requires:
            - integration-test-install-cli
            - integration-test-ctr-vuln-scan
            - integration-test-scan-pkg-manifest
          filters:
            branches:
              only: master
